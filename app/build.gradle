plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'ainul.production.myapplication'
    compileSdk 34

    defaultConfig {
        applicationId "ainul.production.myapplication"
        minSdk 25
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("$rootDir/debug.keystore")
            keyAlias "androiddebugkey"
            keyPassword "android"
            storePassword "android"
        }
        release {
            storeFile file("$rootDir/batama.jks")
            storePassword "batama123"
            keyAlias "key0"
            keyPassword "batama123"
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-dev"
            resValue "string", "app_name", "Toko Online Dev"
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    namespace 'com.example.tokoonline'

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    flavorDimensions "version"
    productFlavors {
        sandbox {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension "version"
            buildConfigField "String", "CLIENT_KEY", properties.getProperty("clientKeySandBox")
            buildConfigField "String", "SERVER_URL", properties.getProperty("serverUrl")
        }
        prod {
            dimension "version"
            buildConfigField "String", "CLIENT_KEY", properties.getProperty("clientKeyRelease")
            buildConfigField "String", "SERVER_URL", properties.getProperty("serverUrl")
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.5'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    debugImplementation "com.github.chuckerteam.chucker:library:4.0.0"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:4.0.0"

    // Midtrans UI Kit
    implementation 'com.midtrans:uikit:2.0.0'
}